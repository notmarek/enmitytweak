name: Create a bleeding-edge release
on: workflow_dispatch


jobs:
  inputs:
    ipaUrl:
      description: 'Clean IPA url.'
      required: true
  build:
    name: Build and publish Enmity Alpha for iOS
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: 'main'
          submodules: true

      - name: Check cache
        id: verify-cache
        run: |
          echo "::set-output name=heads::`git ls-remote https://github.com/theos/theos | head -n 1 | cut -f 1`-`git ls-remote https://github.com/theos/sdks | head -n 1 | cut -f 1`"

      - name: Use cache
        uses: actions/cache@v2
        with:
          path: |
            ${{ github.workspace }}/theos
          key: ${{ runner.os }}-${{ steps.verify-cache.outputs.heads }}
          
      - name: Prepare `make` for Theos Parallel Building 
        run : |
          brew install make

      - name: Prepare Theos
        uses: Randomblock1/theos-action@v1

      - name: Prepare Azule
        run : |
          git clone https://github.com/Al4ise/Azule ${{ github.workspace }}/Azule

      - name: Prepare Enmity Patcher
        run : |
          curl -L https://github.com/enmity-mod/patcher/releases/latest/download/patcher.mac-amd64 -o ${{ github.workspace }}/patcher
          chmod +x patcher
      
      - name: Get Specified Discord IPA
        run : |
          curl -L {{inputs.ipaUrl}} -o ${{ github.workspace }}/Discord.ipa
      
      - name: Patch Discord
        run : |
          ${{ github.workspace }}/patcher -d ${{ github.workspace }}/Discord.ipa

      - name: Build package
        run: |
          rm -f packages/*
          /usr/local/opt/make/libexec/gnubin/make package FINALPACKAGE=1 BETA=1

      - name: Find deb
        id: find_deb
        run : |
          echo "::set-output name=deb::$(find packages -name "*.deb" -print -quit)"

      - name: Create Enmity.ipa
        run : |
          mkdir out
          ${{ github.workspace }}/Azule/azule -p "Enmity Alpha" -i Enmity.ipa -o out -f ${{ steps.find_deb.outputs.deb }}
          mv $(find out -name "*.ipa" -print -quit) out/Enmity-Alpha.ipa

      - name: Set outputs
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: alpha-${{ steps.vars.outputs.sha_short }}
          files:  |
            ${{ steps.find_deb.outputs.deb }}
            out/Enmity-Alpha.ipa
          prerelease: true
